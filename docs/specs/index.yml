swagger: "2.0"
#openapi: 3.0.0
info:
  description: "oliveサロンのフロントエンドで必要なAPIです"
  version: "1.0.0"
  title: "oliveサロンフロントエンドAPI"
  termsOfService: "https://github.com/egg-system/olive-front"
  contact:
    email: "example@example.com"
  license:
    name: "エッグシステム"
    url: "https://eggsystem.co.jp/"
host: "reserve.olivebodycare.healthcare"
securityDefinitions:
  # basic認証。初期ログイン時に使用予定
  basicAuth:
    type: basic
  # 以下、railsのapi-token認証用
  uid:
    type: apiKey
    name: uid
    in: header
  access-token:
    type: apiKey
    name: access-token
    in: header
  client:
    type: apiKey
    name: client
    in: header
paths:
  /api/shops/{id}:
    get:
      tags: ["shop"]
      summary: "店舗情報API"
      description: "指定されたidの店舗情報を返します"
      parameters:
      - name: "id"
        in: "path"
        description: "店舗のID"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            $ref: "#/definitions/Shop"
        400:
          description: "失敗時のレスポンス"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "request bad error"
  /api/shops/{id}/menus:
    get:
      tags: ["shop"]
      summary: "メニュー一覧API"
      description: "指定されたidの店舗で利用できるメニュー一覧を返します"
      parameters:
      - name: "id"
        in: "path"
        description: "店舗のID"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                  format: "int64"
                  example: "1"
                name:
                  type: "string"
                  example: "女性専門の治療院オリーヴボディケアたまプラーザ店"
                menus:
                  type: "array"
                  items:
                    $ref: "#/definitions/ShopMenu"
        400:
          description: "失敗時のレスポンス"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "request bad error"
  /api/shops/{id}/dates:
    get:
      tags: ["shop"]
      summary: "予約カレンダーAPI"
      description: "指定された店舗id、メニューidから予約カレンダーを表示するための情報を返します。\nレスポンスのjsonは日付でグルーピングされた予約枠になります。"
      parameters:
      - name: "id"
        in: "path"
        description: "店舗のID"
        required: true
        type: "integer"
        format: "int64"
      - name: "menu_ids"
        required: true
        in: "query"
        type: "array"
        description: "施術するメニューID"
        items:
          type: "integer"
          format: "int64"
      - name: "option_ids"
        required: false
        in: "query"
        type: "array"
        description: "施術するオプションID"
        items:
          type: "integer"
          format: "int64"
      - name: "from_date"
        required: true
        in: "query"
        type: "string"
        description: "予約枠の検索開始日付"
      - name: "to_date"
        required: true
        in: "query"
        type: "string"
        description: "予約枠の検索終了日付"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                yyyymmdd:
                  type: "array"
                  items:
                    $ref: "#/definitions/ShopDate"
        400:
          description: "失敗時のレスポンス"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "request bad error"
  /api/customers:
    post:
      tags: ["customer"]
      summary: "ユーザー作成API"
      description: "ユーザーを作成するAPI。"
      parameters:
      - name: "provider"
        in: "query"
        description: "認証方式。emailの場合、通常の会員登録になる。<br>非会員の場合、noneにする。"
        required: true
        type: "string"
      - name: "email"
        in: "query"
        description: "メールアドレス"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "パスワード"
        required: true
        type: "string"
      - name: "first_name"
        in: "query"
        description: "苗字"
        required: true
        type: "string"
      - name: "last_name"
        in: "query"
        description: "名前"
        required: true
        type: "string"
      - name: "first_kana"
        in: "query"
        description: "苗字カナ"
        required: true
        type: "string"
      - name: "last_kana"
        in: "query"
        description: "名前カナ"
        required: true
        type: "string"
      - name: "tel"
        in: "query"
        description: "電話番号"
        required: true
        type: "integer"
        format: "int32"
      - name: "zip_code"
        in: "query"
        description: "郵便番号"
        required: true
        type: "string"
      - name: "prefecture"
        in: "query"
        description: "都道府県"
        required: true
        type: "string"
      - name: "city"
        in: "query"
        description: "市区町村"
        required: true
        type: "string"
      - name: "first_visit_store_id"
        in: "query"
        description: "予約店舗のid"
        required: true
        type: "integer"
        format: "int32"
      - name: "last_visit_store_id"
        in: "query"
        description: "予約店舗のid。バックエンド工数短縮のために追加。本来は不要"
        required: true
        type: "integer"
        format: "int32"
      - name: "can_receive_mail"
        in: "query"
        description: "メール受け取り可否"
        required: true
        type: "boolean"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              status:
                type: "string"
                example: "ok"
              data:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: "123"
                  first_name:
                    type: "string"
                    example: "山田"
                  last_name:
                    type: "string"
                    example: "太郎"
                  first_kana:
                    type: "string"
                    example: "ヤマダ"
                  last_kana:
                    type: "string"
                    example: "タロウ"
                  tel:
                    type: "integer"
                    format: "int32"
                    example: 09012345678

        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
    patch:
      tags: ["customer"]
      summary: "プロフィール更新API"
      description: "プロフィールを更新するAPI。パスワード更新にはトークンを使うためパスワード更新とはAPIを分ける。<br>※ユーザー認証はcookieにセットされたセッションIDで行う。"
      security:
        - access-token: []
        - uid: []
        - client: []
      parameters:
      - name: "first_name"
        in: "query"
        description: "苗字"
        required: true
        type: "string"
      - name: "last_name"
        in: "query"
        description: "名前"
        required: true
        type: "string"
      - name: "first_kana"
        in: "query"
        description: "苗字カナ"
        required: true
        type: "string"
      - name: "last_kana"
        in: "query"
        description: "名前カナ"
        required: true
        type: "string"
      - name: "tel"
        in: "query"
        description: "電話番号"
        required: true
        type: "integer"
        format: "int32"
      - name: "can_receive_mail"
        in: "query"
        description: "メール受け取り可否"
        required: true
        type: "boolean"

      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              status:
                type: "string"
                example: "ok"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"
  /api/customers/sign_in:
    post:
      tags: ["customer"]
      summary: "ログインAPI"
      description: "ログイン情報を取得するAPI。返り値はログインしたユーザー情報になる。<br>レスポンスヘッダに認証情報が付与されるため、それを元に認証する"
      parameters:
      - name: "email"
        required: true
        in: "query"
        type: "string"
        description: "ログイン用のメールアドレス"
      - name: "password"
        required: true
        in: "query"
        type: "string"
        description: "パスワード"
      responses:
        200:
          description: "成功時のレスポンス"
          headers:
            uid:
              type: "string"
              description: "認証したユーザーの一意性を担保するid。通常の場合、emailになる"
            access-token:
              type: "string"
              description: "アクセストークン。各ユーザーごとに発行される。期限がある"
            client:
              type: "string"
              description: "同一のクライアントであることを証明するためのランダム文字列"
          schema:
            type: "object"
            properties:
              data:
                $ref: "#/definitions/Customer"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"
  /api/customers/cancel/:
    get:
      tags: ["customer"]
      summary: "予約キャンセルAPI"
      description: "予約をキャンセルするAPI。<br>※ユーザー認証はcookieにセットされたセッションIDで行う。"
      parameters:
      - name: "menu_id"
        in: "query"
        description: "予約メニューID"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
                example: "ok"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"
  /api/customers/validate_token:
    get:
      tags: ["customer"]
      summary: "ユーザー認証API"
      description: "ユーザー認証を行う"
      parameters:
      - name: "client"
        in: "header"
        required: true
        type: "string"
      - name: "uid"
        in: "header"
        required: true
        type: "string"
      - name: "access-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            example:
              success: "ok"
              data:
                $ref: "#/definitions/Customer"
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"
  /api/customers/password:
    post:
      tags: ["customer"]
      summary: "パスワードリセットAPI"
      description: "ユーザーのパスワードをリセットするAPI。<br>成功した場合はサーバサイドからメールでユーザーに通知する。<br>メール文面のurlに認証情報が追記されるため、そこから変更可能"
      parameters:
      - name: "email"
        in: "query"
        description: "メールアドレス"
        required: true
        type: "string"
      - name: "redirect_url"
        in: "query"
        description: "パスワード更新用のurl。"
        required: true
        type: "string"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
              message:
                type: "string"
                example: "{email}にパスワードリセットの案内が送信されました。"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
    patch:
      tags: ["customer"]
      summary: "パスワード更新API"
      description: "パスワードを更新するAPI。サーバイドでトークンのチェックを行う。パスワード更新にはトークンを使うためプロフィール更新とはAPIを分ける"
      security:
        - access-token: []
        - uid: []
        - client: []
      parameters:
      - name: "password"
        in: "query"
        description: "新パスワード"
        required: true
        type: "string"
        format: "password"
      - name: "password_confirmation"
        in: "query"
        description: "新パスワード（確認用）"
        required: true
        type: "string"
        format: "password"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
                example: "ok"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
  /api/reservations:
    get:
      tags: ["reservation"]
      summary: "予約一覧取得API"
      description: "予約情報を一覧で取得するAPI。<br>※ユーザー認証はcookieにセットされたセッションIDで行う。"
      parameters:
      - name: "page"
        in: "query"
        description: "ページ数"
        required: false
        type: "integer"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              total_pages:
                type: "integer"
                example: 1
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Reservation"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"
    post:
      tags: ["reservation"]
      summary: "予約確定API"
      description: "予約を確定するAPI。現状、ユーザー認証不要。後々、会員の場合のみ認証する用、修正予定"
      parameters:
      - name: "customer_id"
        description: "顧客id"
        required: true
        in: "query"
        type: "integer"
        format: "int32"
      - name: "store_id"
        description: "店舗id"
        required: true
        in: "query"
        type: "integer"
        format: "int32"
      - name: "children_count"
        description: "お子様の人数"
        required: false
        in: "query"
        type: "integer"
        format: "int32"
      - name: "reservation_comment"
        description: "サロンへのご要望・ご相談"
        required: false
        in: "query"
        type: "string"
      - name: "reservation_date"
        description: "予約する日付"
        required: true
        in: "query"
        type: "string"
        format: "date"
      - name: "start_time"
        description: "予約する時刻"
        required: true
        in: "query"
        type: "string"
        pattern: "hh:mm"
      - name: "is_first"
        description: "初回かどうか"
        required: true
        in: "query"
        type: "boolean"
      - name: "reservation_details_attributes"
        description: "予約詳細。1時間目から順番になっている。<br>メニューのidとオプションid、耳つぼジュエリーの個数を格納<br>※ Swaggerの都合でarray[string]になっているが、本来はarray[object]"
        required: true
        in: "query"
        type: "array"
        items:
          type: "string"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
                example: "ok"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"
  /api/reservations/{id}:
    get:
      tags: ["reservation"]
      summary: "予約情報取得API"
      description: "指定されたidの予約情報を取得するAPI。<br>※ユーザー認証はcookieにセットされたセッションIDで行う。"
      parameters:
      - name: "id"
        in: "path"
        description: "予約ID"
        required: true
        type: "integer"
      responses:
          200:
            description: "成功時のレスポンス"
            schema:
              $ref: "#/definitions/Reservation"
          400:
            description: "パラメータエラー"
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "Bad Request"
          401:
            description: "認証エラー"
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "Unauthorized"
    delete:
      tags: ["reservation"]
      summary: "予約削除API"
      description: "予約情報を削除するAPI。<br>※ユーザー認証はcookieにセットされたセッションIDで行う。"
      parameters:
      - name: "id"
        in: "path"
        description: "予約ID"
        required: true
        type: "integer"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
                example: "ok"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"

definitions:
  Shop:
    type: "object"
    description: "店舗情報"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "店舗ID"
        example: 1
      name:
        type: "string"
        description: "店舗名"
        example: "オリーブボディケア　たまプラーザ店"
      open_at:
        type: "string"
        format: "hh"
        description: "営業開始時間"
        example: "10"
      close_at:
        type: "string"
        description: "営業終了時間"
        format: "hh"
        example: "20"
      break_from:
        type: "string"
        description: "休憩開始時間"
        format: "hh"
        example: "14"
      break_to:
        type: "string"
        description: "休憩終了時間"
        format: "hh"
        example: "16"
  ShopMenu:
    type: "object"
    description: "店舗で利用できるメニュー"
    properties:
      id:
        type: "integer"
        description: "メニューID"
        format: "int64"
        example: "1"
      name:
        type: "string"
        description: "メニュー名"
        example: "通常整体コース"
      price:
        type: "integer"
        description: "税抜き価格"
        format: "int64"
        example: 6000
      minutes:
        type: "integer"
        description: "施術時間"
        format: "int64"
        example: 60
      description:
        type: "string"
        description: "メニュー説明"
        example:
      options:
        type: "array"
        description: "オプション"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
              description: "オプションID"
              format: "int64"
              example: "1"
            name:
              type: "string"
              description: "オプション名"
              example: "耳つぼジュエリー"
            description:
              type: "string"
              description: "オプション説明"
              example:
            price:
              type: "integer"
              description: "税抜き価格"
              format: "int64"
              example: 2000
            is_mimitsubo_jewelry:
              type: "boolean"
              example: false
  ShopDate:
    type: "object"
    description: "予約カレンダー"
    properties:
      start_time:
        type: "string"
        format: "yyyyMMddhhmm"
        example: "201902281030"
      remain:
        type: "integer"
        format: "int64"
        example: "3"
  Customer:
    type: "object"
    description: "ユーザー情報"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "ユーザーID"
        example: 1
      email:
        type: "string"
        description: "メールアドレス"
        example: "test@test.com"
      provider:
        type: "string"
        example: "email"
      tel:
        type: "string"
        description: "電話番号"
        example: "09010001000"
      uid:
        type: "string"
        example: "test@test.com"
      first_name:
        type: "string"
        description: "名前"
        example: "顧客"
      last_name:
        type: "string"
        description: "苗字"
        example: "高橋"
      first_kana:
        type: "string"
        description: "名前カナ"
        example: "コキャク"
      last_kana:
        type: "string"
        description: "苗字カナ"
        example: "タカハシ"
      fixed_line_tel:
        example:
      gender:
        description: "性別"
        example:
      can_receive_mail:
        type: "boolean"
        example: true
      is_receive_thank_you_letter:
        type: "boolean"
        example: false
      can_receive_dm_mail:
        type: "boolean"
        example: true
      birthday:
        type: "string"
        description: "誕生日"
        example: "1985-01-01"
      zip_code:
        type: "string"
        description: "郵便番号"
        example: "160-0022"
      prefecture:
        type: "string"
        description: "都道府県"
        example: "東京都"
      city:
        type: "string"
        description: "市区町村"
        example: "新宿区"
      address:
        type: "string"
        description: "番地"
        example: "新宿区新宿１−１−１　なんとかビル１階"
      comment:
        type: "string"
        description: "コメント"
        example: "コメントです"
      first_visit_store_id:
        type: "integer"
        format: "int64"
        description: "最初に訪れた店舗ID"
        example: 1
      last_visit_store_id:
        type: "integer"
        format: "int64"
        description: "最後に訪れた店舗ID"
        example: 1
      first_visited_at:
        type: "string"
        description: "最初に訪れた日付"
        example: "2019-01-01"
      last_visited_at:
        type: "string"
        description: "最後に訪れた日付"
        example: "2019-02-01"
      card_number:
        type: "string"
        example: "999"
      introducer:
        type: "string"
        description: "紹介者"
        example: "山田"
      searchd_by:
        type: "string"
        example: "オリーブ"
      has_registration_card:
        type: "boolean"
        example: false
      children_count:
        type: "integer"
        description: "お連れのお子様の数"
        example: 1
      occupation_id:
        type: "integer"
        example: 1
      zoomancy_id:
        type: "integer"
        example: 1
      baby_age_id:
        type: "integer"
        example: 1
      size_id:
        type: "integer"
        example: 1
      visit_reason_id:
        type: "integer"
        example: 1
      nearest_station_id:
        type: "integer"
        example: 1
      allow_password_change:
        type: "boolean"
        example: false
  Reservation:
    type: "object"
    description: "予約情報"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "予約ID"
        example: 1
      state:
        type: "string"
        description: "状態"
        example: "予約中"
      store:
        $ref: "#/definitions/Shop"
      start_at:
        type: "string"
        format: "date-time"
        description: "開始時刻"
        example: "2019-09-30T10:00:00.000+09:00"
      end_at:
        type: "string"
        format: "date-time"
        description: "終了時刻"
        example: "2019-09-30T11:00:00.000+09:00"
      details:
        type: "array"
        items:
          $ref: "#/definitions/ReservationMenu"
      coupons:
        type: "array"
        items:
          $ref: "#/definitions/UsedCoupon"
      fee:
        type: "integer"
        description: "料金"
        example: 6000
  ReservationMenu:
    type: "object"
    description: "予約情報詳細"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "予約詳細ID"
        example: 1
      name:
        type: "string"
        example: "通常整体コース"
      description:
        type: "string"
        example:
      fee:
        type: "integer"
        description: "料金"
        example: 6000
      service_minutes:
        type: "integer"
        description: "時間（分）"
        example: 60
      start_at:
        type: "string"
        format: "date"
        description: "開始日時"
        example: "2019-01-01"
      end_at:
        type: "string"
        format: "date"
        description: "終了日時"
        example:
      menu_category_id:
        type: "integer"
        format: "int64"
        example: 1
      skill_id:
        type: "integer"
        format: "int64"
        example: 1
      memo:
        type: "string"
        description: "メモ"
        example:
      created_at:
        type: "string"
        format: "date-time"
        description: "作成時刻"
        example: "2019-09-14T22:48:33.000+09:00"
      updated_at:
        type: "string"
        format: "date-time"
        description: "更新時刻"
        example: "2019-09-14T22:48:33.000+09:00"
      option_names:
        type: "array"
        items:
          example:
  UsedCoupon:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
