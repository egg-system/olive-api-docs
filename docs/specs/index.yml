swagger: "2.0"
#openapi: 3.0.0
info:
  description: "oliveサロンのフロントエンドで必要なAPIです"
  version: "1.0.0"
  title: "oliveサロンフロントエンドAPI"
  termsOfService: "https://github.com/egg-system/olive-front"
  contact:
    email: "example@example.com"
  license:
    name: "エッグシステム"
    url: "https://eggsystem.co.jp/"
host: "reserve.olivebodycare.healthcare"
securityDefinitions:
  # basic認証。初期ログイン時に使用予定
  basicAuth:
    type: basic
  # 以下、railsのapi-token認証用
  uid:
    type: apiKey
    name: uid
    in: header
  access-token:
    type: apiKey
    name: access-token
    in: header
  client:
    type: apiKey
    name: client
    in: header
paths:
  /api/shops/{id}:
    get:
      tags: ["shun API"]
      summary: "店舗情報API"
      description: "指定されたidの店舗情報を返します"
      parameters:
      - name: "id"
        in: "path"
        description: "店舗のID"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                format: "int64"
                example: "1"
              name:
                type: "string"
                example: "オリーブボディケア　たまプラーザ店"
              open_at:
                description: "営業開始時間"
                type: "string"
                format: "hh"
                example: "10"
              close_at:
                description: "営業終了時間"
                type: "string"
                format: "hh"
                example: "20"
              break_from:
                description: "休憩開始時間"
                type: "string"
                format: "hh"
                example: "14"
              break_to:
                description: "休憩終了時間"
                type: "string"
                format: "hh"
                example: "16"
        400:
          description: "失敗時のレスポンス"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "request bad error"
  /api/shops/{id}/menus:
    get:
      tags: ["shun API"]
      summary: "メニュー一覧API"
      description: "指定されたidの店舗で利用できるメニュー一覧を返します"
      parameters:
      - name: "id"
        in: "path"
        description: "店舗のID"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                  format: "int64"
                  example: "1"
                name:
                  type: "string"
                  example: "女性専門の治療院オリーヴボディケアたまプラーザ店"
                menus:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      id:
                        type: "integer"
                        format: "int64"
                        example: "1"
                      name:
                        type: "string"
                        example: "通常整体コース"
                      price:
                        description: "税抜き価格"
                        type: "integer"
                        format: "int64"
                        example: 6000
                      minutes:
                        description: "施術時間"
                        type: "integer"
                        format: "int64"
                        example: 60
                      description:
                        example:
                      options:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              format: "int64"
                              example: "1"
                            name:
                              type: "string"
                              example: "耳つぼジュエリー"
                            description:
                              example:
                            price:
                              description: "税抜き価格"
                              type: "integer"
                              format: "int64"
                              example: 2000
                            is_mimitsubo_jewelry:
                              type: "boolean"
                              example: false
        400:
          description: "失敗時のレスポンス"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "request bad error"
  /api/shops/{id}/dates:
    get:
      tags: ["shun API"]
      summary: "予約カレンダーAPI"
      description: "指定された店舗id、メニューidから予約カレンダーを表示するための情報を返します。\nレスポンスのjsonは日付でグルーピングされた予約枠になります。"
      parameters:
      - name: "id"
        in: "path"
        description: "店舗のID"
        required: true
        type: "integer"
        format: "int64"
      - name: "menu_ids"
        required: true
        in: "query"
        type: "array"
        description: "施術するメニューID"
        items:
          type: "integer"
          format: "int64"
      - name: "option_ids"
        required: false
        in: "query"
        type: "array"
        description: "施術するオプションID"
        items:
          type: "integer"
          format: "int64"
      - name: "from_date"
        required: true
        in: "query"
        type: "string"
        description: "予約枠の検索開始日付"
      - name: "to_date"
        required: true
        in: "query"
        type: "string"
        description: "予約枠の検索終了日付"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                yyyymmdd:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      start_time:
                        type: "string"
                        format: "yyyyMMddhhmm"
                        example: "201902281030"
                      remain:
                        type: "integer"
                        format: "int64"
                        example: "3"
        400:
          description: "失敗時のレスポンス"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "request bad error"
  /api/customers/sign_in:
    post:
      tags: ["hikaru API"]
      summary: "ログインAPI"
      description: "ログイン情報を取得するAPI。返り値はログインしたユーザー情報になる。<br>レスポンスヘッダに認証情報が付与されるため、それを元に認証する"
      parameters:
      - name: "email"
        required: true
        in: "formData"
        type: "string"
        description: "ログイン用のメールアドレス"
      - name: "password"
        required: true
        in: "formData"
        type: "string"
        description: "パスワード"
      responses:
        200:
          description: "成功時のレスポンス"
          headers:
            uid:
              type: "string"
              description: "認証したユーザーの一意性を担保するid。通常の場合、emailになる"
            access-token:
              type: "string"
              description: "アクセストークン。各ユーザーごとに発行される。期限がある"
            client:
              type: "string"
              description: "同一のクライアントであることを証明するためのランダム文字列"
          schema:
            type: "object"
            properties:
              data:
                type: "object"
                example:
                  id: 1
                  email: "test@test.com"
                  provider: "email"
                  tel: "09010001000"
                  uid: "test@test.com"
                  first_name: "顧客"
                  last_name: "高橋"
                  first_kana: "コキャク"
                  last_kana: "タカハシ"
                  fixed_line_tel:
                  gender:
                  can_receive_mail: true
                  is_receive_thank_you_letter: false
                  can_receive_dm_mail: true
                  birthday: "1985-01-01"
                  zip_code: "160-0022"
                  prefecture: "東京都"
                  city: "新宿区新宿１−１−１　なんとかビル１階"
                  address: "東京都 新宿区新宿１−１−１　なんとかビル１階"
                  comment: "コメントです"
                  first_visit_store_id: 1
                  last_visit_store_id: 2
                  first_visited_at: "2019-01-01"
                  last_visited_at: "2019-02-01"
                  card_number: "999"
                  introducer: "山田"
                  searchd_by: "オリーブ"
                  has_registration_card: false
                  children_count: 1
                  occupation_id: 1
                  zoomancy_id: 1
                  baby_age_id: 1
                  size_id: 1
                  visit_reason_id: 1
                  nearest_station_id: 1
                  allow_password_change: false
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"
  /api/customers:
    post:
      tags: ["additional"]
      summary: "ユーザー作成API"
      description: "ユーザーを作成するAPI。"
      parameters:
      - name: "provider"
        in: "query"
        description: "認証方式。emailの場合、通常の会員登録になる。<br>非会員の場合、noneにする。"
        required: true
        type: "string"
      - name: "email"
        in: "query"
        description: "メールアドレス"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "パスワード"
        required: true
        type: "string"
      - name: "first_name"
        in: "query"
        description: "苗字"
        required: true
        type: "string"
      - name: "last_name"
        in: "query"
        description: "名前"
        required: true
        type: "string"
      - name: "first_kana"
        in: "query"
        description: "苗字カナ"
        required: true
        type: "string"
      - name: "last_kana"
        in: "query"
        description: "名前カナ"
        required: true
        type: "string"
      - name: "tel"
        in: "query"
        description: "電話番号"
        required: true
        type: "integer"
        format: "int32"
      - name: "zip_code"
        in: "query"
        description: "郵便番号"
        required: true
        type: "string"
      - name: "prefecture"
        in: "query"
        description: "都道府県"
        required: true
        type: "string"
      - name: "city"
        in: "query"
        description: "市区町村"
        required: true
        type: "string"
      - name: "first_visit_store_id"
        in: "query"
        description: "予約店舗のid"
        required: true
        type: "integer"
        format: "int32"
      - name: "last_visit_store_id"
        in: "query"
        description: "予約店舗のid。バックエンド工数短縮のために追加。本来は不要"
        required: true
        type: "integer"
        format: "int32"
      - name: "can_receive_mail"
        in: "query"
        description: "メール受け取り可否"
        required: true
        type: "boolean"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              status:
                type: "string"
                example: "ok"
              data:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: "123"
                  first_name:
                    type: "string"
                    example: "山田"
                  last_name:
                    type: "string"
                    example: "太郎"
                  first_kana:
                    type: "string"
                    example: "ヤマダ"
                  last_kana:
                    type: "string"
                    example: "タロウ"
                  tel:
                    type: "integer"
                    format: "int32"
                    example: 09012345678

        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
    patch:
      tags: ["hikaru API"]
      summary: "プロフィール更新API"
      description: "プロフィールを更新するAPI。パスワード更新にはトークンを使うためパスワード更新とはAPIを分ける。<br>※ユーザー認証はcookieにセットされたセッションIDで行う。"
      security:
        - access-token: []
        - uid: []
        - client: []
      parameters:
      - name: "first_name"
        in: "query"
        description: "苗字"
        required: true
        type: "string"
      - name: "last_name"
        in: "query"
        description: "名前"
        required: true
        type: "string"
      - name: "first_kana"
        in: "query"
        description: "苗字カナ"
        required: true
        type: "string"
      - name: "last_kana"
        in: "query"
        description: "名前カナ"
        required: true
        type: "string"
      - name: "tel"
        in: "query"
        description: "電話番号"
        required: true
        type: "integer"
        format: "int32"
      - name: "can_receive_mail"
        in: "query"
        description: "メール受け取り可否"
        required: true
        type: "boolean"

      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              status:
                type: "string"
                example: "ok"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"
  /api/customers/cancel/:
    get:
      tags: ["hikaru API"]
      summary: "予約キャンセルAPI"
      description: "予約をキャンセルするAPI。<br>※ユーザー認証はcookieにセットされたセッションIDで行う。"
      parameters:
      - name: "menu_id"
        in: "query"
        description: "予約メニューID"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
                example: "ok"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"
  /api/customers/validate_token:
    get:
      tags: ["additional"]
      summary: "ユーザー認証API"
      description: "ユーザー認証を行う"
      parameters:
      - name: "client"
        in: "header"
        required: true
        type: "string"
      - name: "uid"
        in: "header"
        required: true
        type: "string"
      - name: "access-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            example:
              success: "ok"
              data:
                id: 1
                first_name: "顧客"
                last_name: "高橋"
                first_kana: "コキャク"
                last_kana: "タカハシ"
                tel: "09010001000"
                fixed_line_tel: null
                gender: null
                can_receive_mail: true
                is_receive_thank_you_letter: false
                can_receive_dm_mail: true
                birthday: "1985-01-01"
                zip_code: "160-0022"
                prefecture: "東京都"
                city: "新宿区新宿１−１−１　なんとかビル１階"
                address: "東京都 新宿区新宿１−１−１　なんとかビル１階"
                comment: "コメントです"
                first_visit_store_id: 1
                last_visit_store_id: 2
                first_visited_at: "2019-01-01"
                last_visited_at: "2019-02-01"
                card_number: "999"
                introducer: "山田"
                searchd_by: "オリーブ"
                has_registration_card: false
                children_count: 1
                occupation_id: 1
                zoomancy_id: 1
                baby_age_id: 1
                size_id: 1
                visit_reason_id: 1
                nearest_station_id: 1
                email: "test@test.com"
                provider: "email"
                uid: "test@test.com"
                allow_password_change: false
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"
  /api/customer/password:
    post:
      tags: ["hikaru API"]
      summary: "パスワードリセットAPI"
      description: "ユーザーのパスワードをリセットするAPI。<br>成功した場合はサーバサイドからメールでユーザーに通知する。<br>メール文面のurlに認証情報が追記されるため、そこから変更可能"
      parameters:
      - name: "email"
        in: "query"
        description: "メールアドレス"
        required: true
        type: "string"
      - name: "redirect_url"
        in: "query"
        description: "パスワード更新用のurl。"
        required: true
        type: "string"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
              message:
                type: "string"
                example: "{email}にパスワードリセットの案内が送信されました。"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
    patch:
      tags: ["hikaru API"]
      summary: "パスワード更新API"
      description: "パスワードを更新するAPI。サーバイドでトークンのチェックを行う。パスワード更新にはトークンを使うためプロフィール更新とはAPIを分ける"
      security:
        - access-token: []
        - uid: []
        - client: []
      parameters:
      - name: "password"
        in: "formData"
        description: "新パスワード"
        required: true
        type: "string"
        format: "password"
      - name: "password_confirmation"
        in: "formData"
        description: "新パスワード（確認用）"
        required: true
        type: "string"
        format: "password"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
                example: "ok"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
  /api/reservations:
    post:
      tags: ["hikaru API"]
      summary: "予約確定API"
      description: "予約を確定するAPI。現状、ユーザー認証不要。後々、会員の場合のみ認証する用、修正予定"
      parameters:
      - name: "customer_id"
        description: "顧客id"
        required: true
        in: "query"
        type: "integer"
        format: "int32"
      - name: "store_id"
        description: "店舗id"
        required: true
        in: "query"
        type: "integer"
        format: "int32"
      - name: "children_count"
        description: "お子様の人数"
        required: false
        in: "query"
        type: "integer"
        format: "int32"
      - name: "reservation_comment"
        description: "サロンへのご要望・ご相談"
        required: false
        in: "query"
        type: "string"
      - name: "reservation_date"
        description: "予約する日付"
        required: true
        in: "query"
        type: "string"
        format: "date"
      - name: "start_time"
        description: "予約する時刻"
        required: true
        in: "query"
        type: "string"
        pattern: "hh:mm"
      - name: "is_first"
        description: "初回かどうか"
        required: true
        in: "query"
        type: "boolean"
      - name: "reservation_details_attributes"
        description: "予約詳細。1時間目から順番になっている。<br>メニューのidとオプションid、耳つぼジュエリーの個数を格納<br>※ Swaggerの都合でarray[string]になっているが、本来はarray[object]"
        required: true
        in: "query"
        type: "array"
        items:
          type: "string"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
                example: "ok"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"
    get:
      tags: ["additional"]
      summary: "予約一覧取得API"
      description: "予約情報を一覧で取得するAPI。<br>※ユーザー認証はcookieにセットされたセッションIDで行う。"
      parameters:
      - name: "page"
        in: "query"
        description: "ページ数"
        required: false
        type: "integer"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              total_pages:
                type: "integer"
                example: 1
              data:
                type: "array"
                items:
                  type: "object"
                  example:
                    id: 1
                    state: "予約中"
                    store:
                      id: 1
                      store_type: "owned"
                      name: "女性専門の治療院オリーヴボディケアたまプラーザ店"
                      address: "横浜市青葉区新石川3-15-16 メディカルモールたまプラーザ301"
                      tel: "045-530-1688"
                      mail: "info@olivebodycare.jp"
                      url: "https://olivebodycare.healthcare/salon/tamaplaza"
                      open_at: 10
                      close_at: 20
                      break_from: null
                      break_to: null
                      created_at: "2019-09-14T22:48:33.000+09:00"
                      updated_at: "2019-09-14T22:48:33.000+09:00"
                      zip_code: null
                    start_at: "2019-09-30T10:00:00.000+09:00"
                    end_at: "2019-09-30T11:00:00.000+09:00"
                    details:
                      - id: 1
                        menu:
                          id: 1
                          name: "通常整体コース"
                          description: null
                          fee: 6000
                          service_minutes: 60
                          start_at: "2019-01-01"
                          end_at: null
                          menu_category_id: 1
                          skill_id: 1
                          memo: null
                          created_at: "2019-09-14T22:48:33.000+09:00"
                          updated_at: "2019-09-14T22:48:33.000+09:00"
                        option_names:
                          -
                    coupons:
                      -
                    fee: 6000
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"
  /api/reservations/{id}:
    get:
      tags: ["additional"]
      summary: "予約情報取得API"
      description: "指定されたidの予約情報を取得するAPI。<br>※ユーザー認証はcookieにセットされたセッションIDで行う。"
      parameters:
      - name: "id"
        in: "path"
        description: "予約ID"
        required: true
        type: "integer"
      responses:
          200:
            description: "成功時のレスポンス"
            schema:
              type: "object"
              example:
                data:
                  id: 1
                  state: "予約中"
                  store:
                    id: 1
                    store_type: "owned"
                    name: "女性専門の治療院オリーヴボディケアたまプラーザ店"
                    address: "横浜市青葉区新石川3-15-16 メディカルモールたまプラーザ301"
                    tel: "045-530-1688"
                    mail: "info@olivebodycare.jp"
                    url: "https://olivebodycare.healthcare/salon/tamaplaza"
                    open_at: 10
                    close_at: 20
                    break_from: null
                    break_to: null
                    created_at: "2019-09-14T22:48:33.000+09:00"
                    updated_at: "2019-09-14T22:48:33.000+09:00"
                    zip_code: null
                  start_at: "2019-09-30T10:00:00.000+09:00"
                  end_at: "2019-09-30T11:00:00.000+09:00"
                  details:
                    - id: 1
                      menu:
                        id: 1
                        name: "通常整体コース"
                        description: null
                        fee: 6000
                        service_minutes: 60
                        start_at: "2019-01-01"
                        end_at: null
                        menu_category_id: 1
                        skill_id: 1
                        memo: null
                        created_at: "2019-09-14T22:48:33.000+09:00"
                        updated_at: "2019-09-14T22:48:33.000+09:00"
                      option_names:
                        -
                  coupons:
                    -
                  fee: 6000
          400:
            description: "パラメータエラー"
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "Bad Request"
          401:
            description: "認証エラー"
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "Unauthorized"
    delete:
      tags: ["additional"]
      summary: "予約削除API"
      description: "予約情報を削除するAPI。<br>※ユーザー認証はcookieにセットされたセッションIDで行う。"
      parameters:
      - name: "id"
        in: "path"
        description: "予約ID"
        required: true
        type: "integer"
      responses:
        200:
          description: "成功時のレスポンス"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
                example: "ok"
        400:
          description: "パラメータエラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Bad Request"
        401:
          description: "認証エラー"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Unauthorized"

definitions:
  Reservation:
    type: "object"
    description: ""
    properties:
      start_time:
        type: "string"
        format: "yyyymmddhh"
        description: "予約した施術の開始時刻"
        example: "2019022810"
      total_minutes:
        type: integer
        example: 60
        description: "合計施術時間"
      children_count:
        type: integer
        example: 3
        description: "お子様連れ
                      0:なし
                      1:1人
                      2:2人
                      3:3人
                      4:4人
                      5:5人以上"

      pregnant_state_id:
        type: integer
        example: 3
        description: "妊娠ステータスID
                    1：妊娠なし
                    2：4ヶ月未満
                    3：5ヶ月
                    4：6ヶ月
                    5：7ヶ月
                    6：8ヶ月"
      reservation_comment:
        type: string
        example: ""
        description: "サロンへのご要望・ご相談"
      menus:
        type: "array"
        items:
          $ref: "#/definitions/SelectedMenu"
      coupons:
        type: "array"
        items:
          $ref: "#/definitions/UsedCoupon"


  Customer:
    type: "object"
    properties:
      email:
        description: "メールアドレス"
        type: "string"
        example: "test@aaa.com"
      password:
        description: "パスワード：新規登録かつ会員登録を行わない場合はnull"
        type: "string"
        format: "password"
        example: "exT98X"
      first_name:
        description: "苗字"
        type: "string"
        example: "山田"
      last_name:
        description: "名前"
        type: "string"
        example: "太郎"
      first_kana:
        description: "苗字カナ"
        type: "string"
        example: "ヤマダ"
      last_kana:
        description: "名前カナ"
        type: "string"
        example: "タロウ"
      tel:
        description: "電話番号（ハイフンなし）"
        type: "string"
        example: "09099004411"
      has_membership:
        description: "会員登録の有無。"
        type: "boolean"
      can_receive_mail:
        description: "メール受け取り可否"
        type: "boolean"
  SelectedMenu:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      options:
        type: "array"
        items:
          $ref: "#/definitions/SelectedOption" # Storeを呼び出す
  SelectedOption:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      count:
        type: "integer"
        format: "int64"
        example: 1
        description: "耳つぼジュエリーの場合に個数を入れる。それ以外はnull"
  UsedCoupon:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
  CouponType:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      name:
        type: "string"
        example: "施術"
        description: "施術/インデプス/ブライダルエステ"
      remains:
        type: "array"
        description: "有効期限ごとの残り回数券数"
        items:
          type: "object"
          properties:
            count:
              type: "integer"
              format: "int64"
              example: "5"
              description: "残り回数券数"
            expire_at:
              type: "integer"
              format: "int64"
              example: 20190331
              description: "有効期限"
